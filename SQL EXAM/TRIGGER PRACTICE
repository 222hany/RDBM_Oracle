//1. 로그 테이블을 생성
CREATE TABLE book_log (
    log_id NUMBER PRIMARY KEY,
    action_type VARCHAR2(10),
    book_id NUMBER,
    log_date TIMESTAMP
);

//2. 로그 테이블의 시퀀스를 생성
CREATE SEQUENCE book_log_seq
START WITH 1
INCREMENT BY 1;

//3. 로그 테이블의 트리거를 생성
CREATE OR REPLACE TRIGGER book_trigger
AFTER INSERT OR UPDATE OR DELETE ON book
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        -- INSERT가 실행될 때 마다 로그 테이블에 로그를 추가
        INSERT INTO book_log (log_id, action_type, book_id, log_date)
        VALUES (book_log_seq.NEXTVAL, 'INSERT : 추가', :NEW.book_id, SYSTIMESTAMP); -- 새로 추가하기 때문에 NEW.
    ELSIF UPDATING THEN
        -- UPDATE가 실행될 때 마다 로그 테이블에 로그를 추가
        INSERT INTO book_log (log_id, action_type, book_id, log_date)
        VALUES (book_log_seq.NEXTVAL, 'UPDATE : 수정', :OLD.book_id, SYSTIMESTAMP); -- 기존에 있던 것에서 수정하기 때문에 OLD.
    ELSIF DELETING THEN
        -- DELETE가 실행될 때 마다 로그 테이블에 로그를 추가
        INSERT INTO book_log (log_id, action_type, book_id, log_date)
        VALUES (book_log_seq.NEXTVAL, 'DELETE : 삭제', :OLD.book_id, SYSTIMESTAMP); -- 기존에 있던 것에서 삭제하기 때문에 OLD.
    END IF;
END;
/

//4. BOOK_LOG 테이블에서 ACTION_TYPE 열의 크기를 수정
ALTER TABLE BOOK_LOG MODIFY ACTION_TYPE VARCHAR2(20);

//5. INSERT - 생성 - 로그에도 추가 됨
INSERT INTO book (book_id, title, author, publication_year, isbn, genre, description, price, publication_date, is_available)
VALUES (21, '새로운 책', '새로운 저자', 2023, '978-1234567890', 'Fiction', '새로운 책 설명', 9.99, TO_DATE('2023-10-13', 'YYYY-MM-DD'), 'Y');

//6. UPDATE - 수정 - 로그에도 추가 됨
UPDATE BOOK SET TITLE = '오래된 책';

//7. DELETE - 삭제 - 로그에도 추가 됨
DELETE FROM BOOK WHERE BOOK_ID = 21;
