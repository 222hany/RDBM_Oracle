==================================SELECT BASIC=====================================

//1 학과 이름과 계열 출력
SELECT DEPARTMENT_NAME AS 학과명, CATEGORY AS 계열 FROM TB_DEPARTMENT;

//2 학과별 학과 정원 출력
SELECT DEPARTMENT_NAME || '의 정원은 ' || TO_CHAR(CAPACITY) || '명 입니다.' FROM TB_DEPARTMENT;

//3 국어국문학과 여학생중 휴학생인 학생 출력
SELECT STUDENT_NAME FROM TB_STUDENT WHERE DEPARTMENT_NO = 001 AND STUDENT_SSN LIKE '%______-2%' AND ABSENCE_YN = 'Y';

//4 도서관 장기 연체자 학번을 이름으로 출력
SELECT STUDENT_NAME FROM TB_STUDENT WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119');

//5 입학정원이 20명 이상 30명 이하인 학과 이름,계열 출력
SELECT DEPARTMENT_NAME, CATEGORY FROM TB_DEPARTMENT WHERE CAPACITY BETWEEN 20 AND 30;

//6 교수들의 소속학과를 이용하여 총장의 이름을 알아내기
SELECT PROFESSOR_NAME FROM TB_PROFESSOR WHERE DEPARTMENT_NO IS NULL;

//7 학과가 지정되어 있지 않은 학생이 있는지 확인
SELECT * FROM TB_STUDENT WHERE DEPARTMENT_NO IS NULL;

//8 수강신청 시 선수과목 여부 확인하고 과목번호 조회
SELECT CLASS_NO FROM TB_CLASS WHERE PREATTENDING_CLASS_NO IS NOT NULL;

//9 계열 조회
SELECT DISTINCT CATEGORY FROM TB_DEPARTMENT;

//10 02학번 전주 거주자들의 학번, 이름, 주민번호 출력 단 휴학생 제외
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) = 2002 AND STUDENT_ADDRESS LIKE '%전주%' AND ABSENCE_YN = 'N';

==================================SELECT FUNCTION=====================================

//1. 영어영문학과 학생들의 학번, 이름, 입학년도를 입학년도순으로 표시
SELECT STUDENT_NO AS 학번, STUDENT_NAME AS 이름, ENTRANCE_DATE AS 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 002 ORDER BY ENTRANCE_DATE;

//2. 이름이 3글자가 아닌 교수의 이름과 주민번호를 출력
SELECT PROFESSOR_NAME, PROFESSOR_SSN FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != 3;

//3. 남자 교수들의 이름과 나이를 적은 사람에서 많은 순으로 출력 단 2000년 이후 출생자 없음.
SELECT PROFESSOR_NAME 교수이름, EXTRACT(YEAR FROM SYSDATE) - (19||SUBSTR(PROFESSOR_SSN, 1, 2)) 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = 1
ORDER BY 나이;

//4. 교수들의 이름 중 성을 제외한 이름만 출력
SELECT SUBSTR(PROFESSOR_NAME, 2,3)FROM TB_PROFESSOR;

//5. 재수생 입학자(19살 입학자 제외)출력
SELECT STUDENT_NO, STUDENT_NAME FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN, 1, 6))) > 19;

//6. 2020년 크리스마스는 무슨 요일?
SELECT TO_CHAR(TO_DATE('20201225'), 'DAY') FROM DUAL;

//7. 2099년 10월 11일, 2049년 10월 11일, 1999년 10월 11일, 2049년 10월 11일

//8. 2000년도 이전 학생 학번과 이름 출력
SELECT STUDENT_NO, STUDENT_NAME FROM TB_STUDENT WHERE STUDENT_NO NOT LIKE '%A%';

//9. 학번이 A517178인 학생의 학점 총 평점을 출력 점수 1자리 반올림
SELECT ROUND(AVG(POINT),1) FROM TB_GRADE WHERE STUDENT_NO = 'A517178';

//10. 학과별로 학과번호와 학생 수 출력
SELECT DEPARTMENT_NO 학과번호, COUNT(*) 학생수 FROM TB_STUDENT GROUP BY DEPARTMENT_NO ORDER BY 1;

//11. 지도교수를 배정받지 못한 학생의 수
SELECT COUNT(*) FROM TB_STUDENT WHERE COACH_PROFESSOR_NO IS NULL;

//12. 학번이 A112113인 학생의 년도별 평점 소수점 1자리 올림
SELECT SUBSTR(TERM_NO, 1,4) 년도, ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO, 1,4)
ORDER BY 1;

//13. 학과별로 휴학생 수와 학과코드명 출력
SELECT DEPARTMENT_NO 학과코드명, COUNT(*) 휴학생수 FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO;

//14. 동명이인 찾기
SELECT STUDENT_NAME 동일이름, COUNT(*) 동명인수 FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) > 1
ORDER BY 1;

//15. 학번이 A112113인 학생의 년도, 학기 별 평점과 년도별 누적 평점, 총 평점을 소수점 1자리 올림 출력
SELECT SUBSTR(TERM_NO, 1,4) 년도, SUBSTR(TERM_NO, 5,2) 학기, ROUND(AVG(POINT),1)평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2))
ORDER BY 1;

==================================SELECT OPTION=====================================

//1. 학생 이름과 주소 출력
SELECT STUDENT_NAME AS 학생이름, STUDENT_ADDRESS AS 주소지 FROM TB_STUDENT ORDER BY STUDENT_NAME;

//2. 휴학생 이름, 주민번호를 나이가 적은 순으로 출력
SELECT STUDENT_NAME, STUDENT_SSN FROM TB_STUDENT WHERE ABSENCE_YN = 'Y' ORDER BY STUDENT_SSN DESC;

//3. 주소지가 강원도나 경기도인 학생중 1900년대 학번인 학생 이름, 학번, 주소 출력
SELECT STUDENT_NAME AS 학생이름, STUDENT_NO AS 학번, STUDENT_ADDRESS AS 거주지주소 FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '%경기도%' OR STUDENT_ADDRESS LIKE '%강원도%') AND STUDENT_NO NOT LIKE '%A%'
ORDER BY STUDENT_NAME;

//4. 법학과 교수들을 나이가 많은 순으로 출력
SELECT PROFESSOR_NAME, PROFESSOR_SSN FROM TB_PROFESSOR WHERE DEPARTMENT_NO = 005 ORDER BY PROFESSOR_SSN;

//5. 2004년 2학기에 'C3118100' 과목을 수강한 학생들의 학점을 학점 순으로 출력
SELECT STUDENT_NO, POINT FROM TB_GRADE
WHERE CLASS_NO = 'C3118100' AND TERM_NO = 200402
ORDER BY POINT DESC;

//6. 학번, 이름, 학과를 학생이름 순으로 출력
SELECT S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
ORDER BY STUDENT_NAME;

//7. 과목이름과 학과이름을 출력
SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS C
JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO;

//8. 과목별 교수 이름 출력
SELECT C.CLASS_NAME, P.PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR CP ON C.CLASS_NO = CP.CLASS_NO
JOIN TB_PROFESSOR P ON P.PROFESSOR_NO = CP.PROFESSOR_NO;

//9. 8번의 결과에서 인문사회 계열 교수의 수업만 출력
SELECT C.CLASS_NAME, P.PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR CP ON C.CLASS_NO = CP.CLASS_NO
JOIN TB_PROFESSOR P ON P.PROFESSOR_NO = CP.PROFESSOR_NO
JOIN TB_DEPARTMENT D ON D.DEPARTMENT_NO = P.DEPARTMENT_NO
WHERE CATEGORY = '인문사회';

//10. 음악학과 학번, 이름, 전체평점(소수점 1자리 반올림) 출력
SELECT G.STUDENT_NO 학번, STUDENT_NAME 학생이름, ROUND(AVG(POINT), 1) AS 전체평점
FROM TB_GRADE G
JOIN TB_STUDENT S ON G.STUDENT_NO = S.STUDENT_NO
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY G.STUDENT_NO, STUDENT_NAME
ORDER BY 1;

//11. 학번 A313047 학생의 학과이름, 이름, 지도교수 이름을 출력
SELECT D.DEPARTMENT_NAME AS 학과이름, S.STUDENT_NAME AS 학생이름, P.PROFESSOR_NAME AS 지도교수이름
FROM TB_DEPARTMENT D
JOIN TB_STUDENT S ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
JOIN TB_PROFESSOR P ON P.PROFESSOR_NO = S.COACH_PROFESSOR_NO
WHERE STUDENT_NO = 'A313047';

//12. 2007년도에 인간관계론을 수강한 학생 이름, 학기 출력
SELECT S.STUDENT_NAME, G.TERM_NO
FROM TB_STUDENT S
JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
JOIN TB_CLASS C ON C.CLASS_NO = G.CLASS_NO
WHERE CLASS_NAME = '인간관계론' AND TERM_NO LIKE '%2007__%';


//13. 예체능 계열 과목 중 담당교수를 한명도 배정받지 못한 과목이름, 학과이름 출력
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
LEFT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
WHERE CATEGORY = '예체능' AND PROFESSOR_NO IS NULL;

//14. 서반아어학과 학생들의 이름과 지도교수 출력 없을경우 지도교수 미지정 출력
SELECT S.STUDENT_NAME, P.PROFESSOR_NAME,
CASE
WHEN S.COACH_PROFESSOR_NO IS NULL THEN '지도교수 미지정'
ELSE NULL
END
FROM TB_STUDENT S
JOIN TB_PROFESSOR P ON S.COACH_PROFESSOR_NO = P.PROFESSOR_NO
WHERE S.DEPARTMENT_NO = 020
ORDER BY S.STUDENT_NO;

//15. 휴학생이 아닌 학생중 평점 4.0이상인 학생의 학번, 이름, 학과이름, 평점을 출력
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME 학과이름, AVG(POINT) 평점
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0
ORDER BY 1;

//16. 환경조경학과 전공과목들의 과목별 평점
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과' AND CLASS_TYPE LIKE '%전공%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 1
;

//17. 최경희 학생과 같은과 학생들의 이름과 주소 출력
SELECT STUDENT_NAME, STUDENT_ADDRESS FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_STUDENT WHERE STUDENT_NAME = '최경희');

//18. 국어국문학과에서 총 평점이 가장 높은 학생의 이름, 학번 출력
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY STUDENT_NO, STUDENT_NAME
HAVING AVG(POINT)=(SELECT MAX(AVG(POINT))
                   FROM TB_GRADE
                   JOIN TB_STUDENT USING(STUDENT_NO)
                   JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
                   WHERE DEPARTMENT_NAME = '국어국문학과'
                   GROUP BY STUDENT_NO);

//19. 환경조경학과와 같은 계열 학과들의 학과명, 학과별 전공과목 평점 출력
SELECT DEPARTMENT_NAME 계열학과명, ROUND(AVG(POINT),1) 전공평점
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE CATEGORY = (SELECT CATEGORY FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY DEPARTMENT_NAME
ORDER BY 1;
